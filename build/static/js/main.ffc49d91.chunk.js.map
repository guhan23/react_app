{"version":3,"sources":["components/BucketInput.js","components/TodoInput.js","components/Todo.js","components/ListItem.js","components/BucketTodoInput.js","components/Bucket.js","components/ListBucket.js","App.js","serviceWorker.js","index.js"],"names":["BucketInput","props","onAdd","val","addBucket","toLowerCase","fetchData","setState","inputBucket","onReset","fetch","method","then","res","catch","err","console","log","state","onInputChange","bind","e","this","target","value","style","width","InputGroup","Input","type","className","placeholder","onChange","InputGroupAddon","addonType","Button","onClick","React","Component","TodoInput","addTodo","inputVal","Todo","name","id","status","openModel","editedInput","toggleEdit","onEditChange","getData","json","result","body","JSON","stringify","editId","editVal","headers","alert","stat","changedStatus","editStatus","deleteId","modalOpen","title","disabled","Modal","isOpen","fade","ModalHeader","ModalBody","ModalFooter","color","onEditSave","deleteItem","ListItem","items","map","key","todo_id","colourStyles","control","styles","backgroundColor","option","BucketTodoInput","bucket","addBucketTodo","select","inputTodo","_onSelect","list","prevProps","prevState","length","undefined","opt","element","sample","Object","assign","label","bucketName","align","font","display","flexDirection","options","isMulti","isSearchable","isClearable","Bucket","listOfTodo","timer","setInterval","data","error","item","ListBucket","itemsOfBucket","listOfBucket","marginTop","flexFlow","App","addingTodo","getTodoData","newTodo","uuidv4","Container","fluid","Row","Col","xs","padding","Card","outline","margin","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+SAoEeA,E,kDAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,MAAQ,SAACC,GACL,EAAKF,MAAMG,UAAUD,EAAIE,eACzB,EAAKJ,MAAMK,YACX,EAAKC,SAAS,CAAEC,YAAa,MAhBd,EAkBnBC,QAAU,WAENC,MAAM,yCAA0C,CAC5CC,OAAQ,WAEPC,MAAK,SAAAC,GACF,EAAKZ,MAAMK,eAEdQ,OAAM,SAAAC,GAASC,QAAQC,IAAIF,OAxBhC,EAAKG,MAAQ,CACTV,YAAa,IAEjB,EAAKW,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKlB,MAAQ,EAAKA,MAAMkB,KAAX,gBANE,E,0DASLC,GACVC,KAAKf,SAAS,CAAEC,YAAaa,EAAEE,OAAOC,U,+BAqBhC,IAAD,OACDrB,EAAiC,KAA3BmB,KAAKJ,MAAMV,YAAqBc,KAAKJ,MAAMV,YAAc,KAEnE,OACI,yBAAKiB,MAAO,CAAEC,MAAO,UACjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIJ,MAAOF,KAAKJ,MAAMV,YAClBqB,KAAK,OACLC,UAAU,cACVC,YAAa,aACbC,SAAUV,KAAKH,gBAEnB,kBAACc,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAKlC,MAAMC,KAAM,kBAAC,IAAD,QAExE,kBAAC8B,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAK3B,YAAxD,oB,GAjDE4B,IAAMC,WCyCjBC,G,wDAzCX,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,MAAQ,SAACC,GACL,EAAKF,MAAMuC,QAAQrC,GACnB,EAAKI,SAAS,CAAEkC,SAAU,MAb1B,EAAKvB,MAAQ,CACTuB,SAAU,IAEd,EAAKtB,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKlB,MAAQ,EAAKA,MAAMkB,KAAX,gBANE,E,0DASLC,GACVC,KAAKf,SAAS,CAAEkC,SAAUpB,EAAEE,OAAOC,U,+BAQ7B,IAAD,OACDrB,EAA8B,KAAxBmB,KAAKJ,MAAMuB,SAAkBnB,KAAKJ,MAAMuB,SAAW,KAE7D,OACI,yBAAKhB,MAAO,CAAEC,MAAO,UACjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIJ,MAAOF,KAAKJ,MAAMuB,SAClBZ,KAAK,OACLC,UAAU,cACVC,YAAa,iBACbC,SAAUV,KAAKH,gBAEnB,kBAACc,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAKlC,MAAMC,KAAM,kBAAC,IAAD,c,GAjCpEkC,IAAMC,Y,gDCkLfI,E,kDApLX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTuB,SAAU,EAAKxC,MAAM0C,KACrBC,GAAI,EAAK3C,MAAM2C,GACfC,OAAQ,EAAK5C,MAAM4C,OACnBC,WAAW,EACXC,YAAa,EAAK9C,MAAM0C,MAE5B,EAAKxB,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAK4B,WAAa,EAAKA,WAAW5B,KAAhB,gBAClB,EAAK6B,aAAe,EAAKA,aAAa7B,KAAlB,gBAXL,E,gEAefE,KAAK4B,Y,gCAGE,IAAD,OACF5B,KAAKJ,MAAM0B,IACXlC,MAAM,iCAAmCY,KAAKJ,MAAM0B,IAC/ChC,MAAK,SAAAC,GAAG,OAAIA,EAAIsC,UAChBvC,MAAK,SAAAwC,GACF,EAAK7C,SAAS,CAAEsC,OAAQO,EAAOP,SAC/B,EAAKtC,SAAS,CAAEkC,SAAUW,EAAO5B,WAEpCV,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,oCAMdM,GACVC,KAAKf,SAAS,CAAEkC,SAAUpB,EAAEE,OAAOC,U,mCAInCF,KAAKf,SAAS,CAAEuC,WAAYxB,KAAKJ,MAAM4B,c,mCAG9BzB,GACTC,KAAKf,SAAS,CAAEwC,YAAa1B,EAAEE,OAAOC,U,iCAG/BrB,EAAKyC,GAAO,IAAD,OACdzC,EAEAO,MAAM,iCAAkC,CACpCC,OAAQ,MACR0C,KAAMC,KAAKC,UAAU,CAAEC,OAAQZ,EAAIa,QAAStD,IAC5CuD,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,GACF,EAAKmC,aACL,EAAKE,UACL,EAAKjD,MAAMK,eAEdQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ,EAAKiC,aACL,EAAK/C,MAAMK,eAKnBqD,MAAM,wB,iCAIHf,EAAIgB,GAAO,IAAD,OACbC,EAAgB,GAEhBA,EADuB,SAAvBD,EAAKvD,cACW,UAEY,YAAvBuD,EAAKvD,cACM,OAGA,UAGhBuC,EAEAlC,MAAM,uCAAwC,CAC1CC,OAAQ,MACR0C,KAAMC,KAAKC,UAAU,CAAEC,OAAQZ,EAAIkB,WAAYD,IAC/CH,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,GACF,EAAKqC,UACL,EAAKjD,MAAMK,eAEdQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAIpB4C,MAAM,wB,iCAIHf,GAAK,IAAD,OACPA,EACAlC,MAAM,mCAAoC,CACtCC,OAAQ,SACR0C,KAAMC,KAAKC,UAAU,CAAEQ,SAAUnB,IACjCc,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,GACF,EAAKZ,MAAMK,eAEdQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAKpB4C,MAAM,0B,+BAKJ,IAAD,OACDK,EAAY1C,KAAKJ,MAAM4B,UAEvBW,EAAsC,KAA3BnC,KAAKJ,MAAM6B,YAAqBzB,KAAKJ,MAAM6B,YAAc,KAExE,OACI,yBAAKtB,MAAO,CAAEC,MAAO,UACjB,kBAACC,EAAA,EAAD,KAEI,kBAACM,EAAA,EAAD,CAAiBC,UAAU,WACe,SAApCZ,KAAKJ,MAAM2B,OAAOxC,cAEZ,kBAAC8B,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAK0B,WAAW,EAAK5C,MAAM0B,GAAI,EAAK1B,MAAM2B,UACzF,kBAAC,IAAD,CAAQoB,MAAO3C,KAAKJ,MAAM2B,UAGjC,kBAACV,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAK0B,WAAW,EAAK5C,MAAM0B,GAAI,EAAK1B,MAAM2B,UAC1F,kBAAC,IAAD,CAAeoB,MAAO3C,KAAKJ,MAAM2B,WAM7C,kBAACjB,EAAA,EAAD,CAAOsC,UAAU,EAAMpC,UAAU,eAAeC,YAAaT,KAAKJ,MAAMuB,WAIxE,kBAAC0B,EAAA,EAAD,CAAOC,OAAQJ,EAAWK,MAAM,GAC5B,kBAACC,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,KACI,kBAAC3C,EAAA,EAAD,CAAOC,KAAK,WAAWL,MAAOF,KAAKJ,MAAM6B,YACrCf,SAAUV,KAAK2B,gBAEvB,kBAACuB,EAAA,EAAD,KACI,kBAACrC,EAAA,EAAD,CAAQsC,MAAM,UAAUrC,QAAS,kBAAM,EAAKsC,WAAWjB,EAAS,EAAKvC,MAAM0B,MAA3E,QAA8F,IAC9F,kBAACT,EAAA,EAAD,CAAQsC,MAAM,YAAYrC,QAASd,KAAK0B,YAAxC,UAAoE,MAI5E,kBAACf,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQS,GAAItB,KAAKJ,MAAM0B,GAAIqB,MAAO,OAAQnC,UAAU,wBAAwB2C,MAAM,YAAYrC,QAASd,KAAK0B,YAAY,kBAAC,IAAD,QACzG,IACnB,kBAACf,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQS,GAAItB,KAAKJ,MAAM0B,GAAIqB,MAAO,SAAUnC,UAAU,uBAAuB2C,MAAM,YAAYrC,QAAS,kBAAM,EAAKuC,WAAW,EAAKzD,MAAM0B,MAAK,kBAAC,IAAD,c,GA7KnJP,IAAMC,WCHzB,SAASsC,EAAS3E,GACd,IACI4E,EADQ5E,EAAMuB,MACAsD,KAAI,SAAC3E,GAAD,OAClB,yBAAK4E,IAAK5E,EAAI6E,QAASlD,UAAU,QAE7B,kBAAC,EAAD,CAAMa,KAAMxC,EAAIqB,MAAOoB,GAAIzC,EAAI6E,QAASnC,OAAQ1C,EAAI0C,OAAQvC,UAAWL,EAAMK,gBAKrF,OACI,6BACI,2CACCuE,G,4DCJPI,EAAe,CACjBC,QAAS,SAAAC,GAAM,kCAAUA,GAAV,IAAkBzD,MAAO,QAAS0D,gBAAiB,WAClEC,OAAQ,SAACF,GACL,OAAO,2BACAA,GADP,IAEIC,gBAAiB,YAiGdE,E,kDA3FX,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAoBVC,MAAQ,SAACC,EAAKoF,GACV,EAAKtF,MAAMuF,cAAcrF,EAAKoF,GAC9B,EAAKtF,MAAMK,YACX,EAAKC,SAAS,CAAEkF,OAAQ,GAAIC,UAAW,MAxBxB,EA4BnBC,UAAY,SAAAF,GACR,EAAKlF,SAAS,CAAEkF,YA3BhB,EAAKvE,MAAQ,CACTwE,UAAW,GACXE,KAAM3F,EAAM2F,KACZH,OAAQ,IAEZ,EAAKtE,cAAgB,EAAKA,cAAcC,KAAnB,gBAPN,E,+DAUAyE,EAAWC,GACtBD,EAAUD,KAAKG,SAAWzE,KAAKrB,MAAM2F,KAAKG,QAC1CzE,KAAKf,SAAS,CAAEqF,KAAMtE,KAAKrB,MAAM2F,S,oCAK3BvE,GACVC,KAAKf,SAAS,CAAEmF,UAAWrE,EAAEE,OAAOC,U,+BAc9B,IAAD,OAGL,GAAIF,KAAKrB,MAAM2F,KAAKG,OAAS,GAAyB,OAApBzE,KAAKrB,MAAM2F,WAAqCI,IAApB1E,KAAKrB,MAAM2F,KAAoB,CAEzF,IAAIK,EAAM3E,KAAKrB,MAAM2F,KAAKd,KAAI,SAAAoB,GAC1B,IAAIC,EAASC,OAAOC,OAAO,IAG3B,OAFAF,EAAOG,MAAQJ,EAAQK,WACvBJ,EAAO3E,MAAQ0E,EAAQK,WAChBJ,KAEX,OACI,6BACI,uBAAGK,MAAM,OAAO/E,MAAO,CAAEgF,KAAM,gBAAiB,qDAChD,yBAAKhF,MAAO,CAAEiF,QAAS,OAAQC,cAAe,QAC1C,kBAAC,IAAD,CACI5E,YAAa,gBACbC,SAAUV,KAAKqE,UACfnE,MAAOF,KAAKJ,MAAMuE,OAClBmB,QAASX,EACTY,SAAS,EACTC,cAAc,EACd3B,OAAQF,EACR8B,aAAa,IAEjB,kBAACpF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIJ,MAAOF,KAAKJ,MAAMwE,UAClB7D,KAAK,OACLC,UAAU,cACVC,YAAa,iBACbC,SAAUV,KAAKH,gBAEnB,kBAACc,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQL,UAAU,kBAAkBM,QAAS,kBAAM,EAAKlC,MAAM,EAAKgB,MAAMwE,UAAW,EAAKxE,MAAMuE,OAAOjE,SAAQ,kBAAC,IAAD,WAQlI,OACI,yBAAKC,MAAO,CAAEiF,QAAS,OAAQC,cAAe,QAC1C,kBAAC,IAAD,CACI5E,YAAa,gBACbC,SAAUV,KAAKqE,UACfkB,SAAS,EACTC,cAAc,EACd3B,OAAQF,EACR8B,aAAa,S,GAnFP1E,IAAMC,WC6DrB0E,E,kDA9EX,WAAY/G,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACTqF,WAAY,EAAKtG,MAAMsG,WACvBU,WAAY,IAEhB,EAAK/D,QAAU,EAAKA,QAAQ9B,KAAb,gBANA,E,gEAUfE,KAAK4B,UACL5B,KAAK4F,MAAQC,YAAY7F,KAAK4B,UAAW,O,yCAG1B2C,EAAWC,GAEtBD,EAAUrE,QAAUF,KAAKrB,MAAMuB,OAC/BF,KAAK4B,Y,gCAIF,IAAD,OACNxC,MAAM,uCAAyCY,KAAKJ,MAAMqF,YACrD3F,MAAK,SAAAC,GAAG,OAAIA,EAAIsC,UAChBvC,MAAK,SAAAwG,GACF,EAAK7G,SAAS,CAAE0G,WAAYG,IAC5BpG,QAAQC,IAAImG,MAEftG,OAAM,SAAAC,GAASC,QAAQqG,MAAMtG,Q,+BAIlC,IAAIZ,EAAOmB,KAAKJ,MAAM+F,WAAWlB,OAAS,EAAIzE,KAAKJ,MAAM+F,WAAa,KAEtE,GAAI9G,EAAK,CACL,IAAI0E,EAAQ1E,EAAI2E,KAAI,SAAAwC,GAChB,MAAoB,YAAhBA,EAAKzE,OAED,wBAAIf,UAAU,mBAAmB,kBAAC,IAAD,CAAemC,MAAOqD,EAAKzE,SAAY,IAAKyE,EAAK9F,OAGjE,SAAhB8F,EAAKzE,OAEN,wBAAIf,UAAU,mBAAmB,kBAAC,IAAD,CAAQmC,MAAOqD,EAAKzE,SAAY,IAAKyE,EAAK9F,OAK3E,wBAAIM,UAAU,mBAAmBwF,EAAK9F,UAIlD,OAEI,yBAAKM,UAAU,OAAOL,MAAO,CAAEC,MAAO,QAASgF,QAAS,iBACpD,yBAAK5E,UAAU,cAAcL,MAAO,CAAE2D,gBAAiB,eACnD,iCAAO9D,KAAKJ,MAAMqF,aAEtB,wBAAIzE,UAAU,+BACT+C,IASb,OACI,kC,GAtEKxC,IAAMC,WCD3B,SAASiF,EAAWtH,GAChB,IACIuH,EADevH,EAAMwH,aACQ3C,KAAI,SAAC3E,GAAD,OACjC,yBAAK4E,IAAK5E,EAAIoG,WAAYzE,UAAU,QAEhC,kBAAC,EAAD,CAAQyE,WAAYpG,EAAIoG,WAAYjG,UAAWL,EAAMK,UAAWkB,MAAOvB,EAAMuB,YAKrF,OACI,6BACI,uBAAGgF,MAAM,OAAO/E,MAAO,CAAEgF,KAAM,cAAeiB,UAAW,SAAU,+CACnE,yBAAKjG,MAAO,CAAEiF,QAAS,OAAQiB,SAAU,aAEpCH,I,ICmNFI,E,kDAzNX,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IACDiB,MAAQ,CACT+F,WAAY,GACZQ,aAAc,IAGlB,EAAKI,WAAa,EAAKA,WAAWzG,KAAhB,gBAClB,EAAKhB,UAAY,EAAKA,UAAUgB,KAAf,gBACjB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBACjB,EAAK0G,YAAc,EAAKA,YAAY1G,KAAjB,gBAVJ,E,gEAefE,KAAKhB,c,yCAIUuF,EAAWC,GAEtBD,EAAUrE,QAAUF,KAAKrB,MAAMuB,OAC/BF,KAAKwG,gB,oCAKE,IAAD,OACVpH,MAAM,iCACDE,MAAK,SAAAC,GAAG,OAAIA,EAAIsC,UAChBvC,MAAK,SAAAwC,GACF,EAAK7C,SAAS,CAAE0G,WAAY7D,IAC5BpC,QAAQC,IAAImC,MAEftC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,kCAIX,IAAD,OAERL,MAAM,iCACDE,MAAK,SAAAC,GAAG,OAAIA,EAAIsC,UAChBvC,MAAK,SAAAwC,GACF,EAAK7C,SAAS,CAAE0G,WAAY7D,IAC5BpC,QAAQC,IAAImC,MAEftC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEpBL,MAAM,uCACDE,MAAK,SAAAC,GAAG,OAAIA,EAAIsC,UAChBvC,MAAK,SAAAwC,GACFpC,QAAQC,IAAImC,GACZ,EAAK7C,SAAS,CAAEkH,aAAcrE,OAEjCtC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,Q,iCAIbZ,GAAM,IAAD,OAEZ,GAAIA,EAAK,CACL,IAAI4H,EAAU,CACV/C,QAASgD,cACTzC,OAAQ,OACR/D,MAAOrB,EACP0C,OAAQ,WAGZnC,MAAM,gCAAiC,CACnCC,OAAQ,OACR0C,KAAMC,KAAKC,UAAUwE,GACrBrE,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,GACF,EAAKP,eAERQ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,S,gCAUlBZ,GAWFA,IACAO,MAAM,kCAAmC,CACrCC,OAAQ,OACR0C,KAAMC,KAAKC,UAAU,CAAEgD,WAAYpG,IACnCuD,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,OACLC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEpBO,KAAKhB,e,oCAKCH,EAAKoG,GAEf,GAAIpG,EAAK,CACL,IAAI4H,EAAU,CACV/C,QAASgD,cACTzC,OAAQgB,EACR/E,MAAOrB,EACP0C,OAAQ,WAEZnC,MAAM,gCAAiC,CACnCC,OAAQ,OACR0C,KAAMC,KAAKC,UAAUwE,GACrBrE,QAAS,CACL,eAAgB,sBAGnB9C,MAAK,SAAAC,OACLC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEpBO,KAAKhB,YACLU,QAAQC,IAAI,wB,+BAMhB,OACI,yBAAKa,UAAU,OAEX,kBAACmG,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAK7B,MAAM,SAAS/E,MAAO,CAAE6G,QAAS,sBAClC,kBAACC,EAAA,EAAD,CAAMlF,MAAI,EAACmF,SAAO,EAAC/D,MAAM,OAAOhD,MAAO,CAAE2D,gBAAiB,YACtD,6BACI,wBAAI3D,MAAO,CAAEgH,OAAQ,mBAAoBC,WAAY,eACjD,kBAACvG,EAAA,EAAD,CAAQ+B,UAAQ,EAACzC,MAAO,CAAEC,MAAO,SAAW+C,MAAM,QAAlD,OACQ,6CADR,kBAIJ,kBAAC,EAAD,CAAWjC,QAASlB,KAAKuG,eAGjC,6BACKvG,KAAKJ,MAAM+F,WAAWlB,OAAS,EAE5B,yBAAKtE,MAAO,CAAEiG,UAAW,SACrB,kBAAC9C,EAAD,CAAUpD,MAAOF,KAAKJ,MAAM+F,WAAY3G,UAAWgB,KAAKhB,aAIxD,yBAAKwB,UAAU,mBASnC,kBAACsG,EAAA,EAAD,CAAKC,GAAG,KAEJ,yBAAK7B,MAAM,SAAS/E,MAAO,CAAE6G,QAAS,sBAClC,kBAACC,EAAA,EAAD,CAAMlF,MAAI,EAACmF,SAAO,EAAC/D,MAAM,OAAOhD,MAAO,CAAE2D,gBAAiB,YACtD,6BACI,wBAAI3D,MAAO,CAAEgH,OAAQ,mBAAoBC,WAAY,eACjD,kBAACvG,EAAA,EAAD,CAAQ+B,UAAQ,EAACzC,MAAO,CAAEC,MAAO,SAAW+C,MAAM,QAAlD,UACW,kDADX,aAIJ,kBAAC,EAAD,CAAarE,UAAWkB,KAAKlB,UAAWE,UAAWgB,KAAKhB,eAIpE,kBAAC2H,EAAA,EAAD,CAAWC,OAAO,GACd,kBAACC,EAAA,EAAD,KACI,yBAAK1G,MAAO,CAAEC,MAAO,OAAQgG,UAAW,UACpC,kBAAC,EAAD,CAAiB9B,KAAMtE,KAAKJ,MAAMuG,aAAcjC,cAAelE,KAAKkE,cAAelF,UAAWgB,KAAKhB,cAG3G,kBAAC6H,EAAA,EAAD,KACI,yBAAK1G,MAAO,CAAEC,MAAO,SACjB,kBAAC6F,EAAD,CAAY/F,MAAOF,KAAKJ,MAAM+F,WAAYQ,aAAcnG,KAAKJ,MAAMuG,aAAcnH,UAAWgB,KAAKhB,uB,GA5MvH+B,IAAMC,WCCJqG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAIL,kBAAC,EAAD,MACAC,SAASC,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1I,MAAK,SAAA2I,GACJA,EAAaC,gBAEd1I,OAAM,SAAAuG,GACLrG,QAAQqG,MAAMA,EAAMoC,c","file":"static/js/main.ffc49d91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    ButtonGroup,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\n\r\nclass BucketInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputBucket: \"\",\r\n        };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onInputChange(e) {\r\n        this.setState({ inputBucket: e.target.value });\r\n    }\r\n\r\n    onAdd = (val) => {\r\n        this.props.addBucket(val.toLowerCase());\r\n        this.props.fetchData();\r\n        this.setState({ inputBucket: \"\" });\r\n    };\r\n    onReset = () => {\r\n\r\n        fetch(\"http://localhost:8000/deleteBucketList\", {\r\n            method: 'DELETE'\r\n        })\r\n            .then(res => {\r\n                this.props.fetchData();\r\n            })\r\n            .catch(err => { console.log(err) })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        let val = this.state.inputBucket !== \"\" ? this.state.inputBucket : null;\r\n\r\n        return (\r\n            <div style={{ width: \"500px\" }}>\r\n                <InputGroup>\r\n                    <Input\r\n                        value={this.state.inputBucket}\r\n                        type=\"text\"\r\n                        className=\"border-dark\"\r\n                        placeholder={\"Add bucket\"}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button className=\"btn border-dark\" onClick={() => this.onAdd(val)}><MdAddCircle /></Button>\r\n                    </InputGroupAddon>\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button className=\"btn border-dark\" onClick={() => this.onReset()}>ResetList</Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BucketInput;\r\n","import React from \"react\";\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\n\r\nclass TodoInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputVal: \"\",\r\n        };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onInputChange(e) {\r\n        this.setState({ inputVal: e.target.value });\r\n    }\r\n\r\n    onAdd = (val) => {\r\n        this.props.addTodo(val);\r\n        this.setState({ inputVal: \"\" });\r\n    };\r\n\r\n    render() {\r\n        let val = this.state.inputVal !== \"\" ? this.state.inputVal : null;\r\n\r\n        return (\r\n            <div style={{ width: \"500px\" }}>\r\n                <InputGroup>\r\n                    <Input\r\n                        value={this.state.inputVal}\r\n                        type=\"text\"\r\n                        className=\"border-dark\"\r\n                        placeholder={\"Enter to do...\"}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button className=\"btn border-dark\" onClick={() => this.onAdd(val)}><MdAddCircle /></Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React from \"react\";\r\nimport { InputGroup, InputGroupAddon, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { BiRotateRight } from \"react-icons/bi\";\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputVal: this.props.name,\r\n            id: this.props.id,\r\n            status: this.props.status,\r\n            openModel: false,\r\n            editedInput: this.props.name,\r\n        };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.onEditChange = this.onEditChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        if (this.state.id) {\r\n            fetch('http://localhost:8000/getTodo/' + this.state.id)\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    this.setState({ status: result.status });\r\n                    this.setState({ inputVal: result.value });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    onInputChange(e) {\r\n        this.setState({ inputVal: e.target.value });\r\n    }\r\n\r\n    toggleEdit() {\r\n        this.setState({ openModel: !this.state.openModel });\r\n    }\r\n\r\n    onEditChange(e) {\r\n        this.setState({ editedInput: e.target.value });\r\n    }\r\n\r\n    onEditSave(val, id, ) {\r\n        if (val) {\r\n\r\n            fetch('http://localhost:8000/editTodo', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({ editId: id, editVal: val }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(res => {\r\n                    this.toggleEdit();\r\n                    this.getData();\r\n                    this.props.fetchData();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    this.toggleEdit();\r\n                    this.props.fetchData();\r\n                })\r\n\r\n        }\r\n        else {\r\n            alert(\"Enter valid text !\")\r\n        }\r\n    }\r\n\r\n    editStatus(id, stat) {\r\n        let changedStatus = \"\";\r\n        if (stat.toLowerCase() === \"done\") {\r\n            changedStatus = \"pending\";\r\n        }\r\n        else if (stat.toLowerCase() === \"pending\") {\r\n            changedStatus = \"done\";\r\n        }\r\n        else {\r\n            changedStatus = \"pending\";\r\n        }\r\n\r\n        if (id) {\r\n\r\n            fetch('http://localhost:8000/editStatusTodo', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({ editId: id, editStatus: changedStatus }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(res => {\r\n                    this.getData();\r\n                    this.props.fetchData();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n        else {\r\n            alert(\"Enter valid text !\")\r\n        }\r\n    }\r\n\r\n    deleteItem(id) {\r\n        if (id) {\r\n            fetch('http://localhost:8000/deleteTodo', {\r\n                method: 'DELETE',\r\n                body: JSON.stringify({ deleteId: id }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(res => {\r\n                    this.props.fetchData();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n\r\n        }\r\n        else {\r\n            alert(\"Not able to delete !\")\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let modalOpen = this.state.openModel;\r\n\r\n        let editVal = (this.state.editedInput !== \"\" ? this.state.editedInput : null);\r\n\r\n        return (\r\n            <div style={{ width: \"400px\" }}>\r\n                <InputGroup>\r\n\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        {(this.state.status.toLowerCase() === \"done\") ?\r\n                            (\r\n                                <Button className=\"btn btn-success\" onClick={() => this.editStatus(this.state.id, this.state.status)}>\r\n                                    <TiTick title={this.state.status} />\r\n                                </Button>) :\r\n\r\n                            (<Button className=\"btn btn-warning\" onClick={() => this.editStatus(this.state.id, this.state.status)}>\r\n                                <BiRotateRight title={this.state.status} />\r\n                            </Button>)\r\n                        }\r\n\r\n                    </InputGroupAddon>\r\n\r\n                    <Input disabled={true} className=\"border-dark \" placeholder={this.state.inputVal} />\r\n\r\n                    {/* <Modal isOpen={modalOpen} modalTransition={{ timeout: 700 }} backdropTransition={{ timeout: 1300 }}> */}\r\n\r\n                    <Modal isOpen={modalOpen} fade={false}>\r\n                        <ModalHeader >Edit TO DO</ModalHeader>\r\n                        <ModalBody>\r\n                            <Input type=\"textarea\" value={this.state.editedInput}\r\n                                onChange={this.onEditChange} />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={() => this.onEditSave(editVal, this.state.id)}>Save</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggleEdit}>Cancel</Button>{' '}\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button id={this.state.id} title={\"Edit\"} className=\"rounded border-dark  \" color=\"secondary\" onClick={this.toggleEdit}><MdEdit /></Button>\r\n                    </InputGroupAddon>{' '}\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button id={this.state.id} title={\"Delete\"} className=\"rounded border-dark \" color=\"secondary\" onClick={() => this.deleteItem(this.state.id)}><MdDelete /></Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nfunction ListItem(props) {\r\n    let value = props.value;\r\n    let items = value.map((val) => (\r\n        <div key={val.todo_id} className=\"mt-2\" >\r\n\r\n            <Todo name={val.value} id={val.todo_id} status={val.status} fetchData={props.fetchData} />\r\n\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h4>TO_DO ITEMS</h4>\r\n            {items}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { ListItem };","import React from \"react\";\r\n\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport Select from 'react-select';\r\n\r\nimport { MdAddCircle } from \"react-icons/md\";\r\n\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, width: \"180px\", backgroundColor: 'white' }),\r\n    option: (styles) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: \"white\"\r\n        };\r\n    },\r\n};\r\n\r\nclass BucketTodoInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputTodo: \"\",\r\n            list: props.list,\r\n            select: []\r\n        };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        // this.onAdd = this.onAdd.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.list.length !== this.props.list.length) {\r\n            this.setState({ list: this.props.list });\r\n        }\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        this.setState({ inputTodo: e.target.value });\r\n    }\r\n\r\n    onAdd = (val, bucket) => {\r\n        this.props.addBucketTodo(val, bucket);\r\n        this.props.fetchData();\r\n        this.setState({ select: [], inputTodo: \"\" });\r\n\r\n    };\r\n\r\n    _onSelect = select => {\r\n        this.setState({ select });\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        if (this.props.list.length > 0 && this.props.list !== null && this.props.list !== undefined) {\r\n\r\n            let opt = this.props.list.map(element => {\r\n                let sample = Object.assign({});\r\n                sample.label = element.bucketName;\r\n                sample.value = element.bucketName;\r\n                return sample\r\n            });\r\n            return (\r\n                <div>\r\n                    <p align=\"left\" style={{ font: \"message-box\" }}><b>ADD TODO IN BUCKETS :</b></p>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                        <Select\r\n                            placeholder={\"Select Bucket\"}\r\n                            onChange={this._onSelect}\r\n                            value={this.state.select}\r\n                            options={opt}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            styles={colourStyles}\r\n                            isClearable={true}\r\n                        />\r\n                        <InputGroup>\r\n                            <Input\r\n                                value={this.state.inputTodo}\r\n                                type=\"text\"\r\n                                className=\"border-dark\"\r\n                                placeholder={\"Enter to do...\"}\r\n                                onChange={this.onInputChange}\r\n                            />\r\n                            <InputGroupAddon addonType=\"append\">\r\n                                <Button className=\"btn border-dark\" onClick={() => this.onAdd(this.state.inputTodo, this.state.select.value)}><MdAddCircle /></Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                    <Select\r\n                        placeholder={\"Select Bucket\"}\r\n                        onChange={this._onSelect}\r\n                        isMulti={false}\r\n                        isSearchable={false}\r\n                        styles={colourStyles}\r\n                        isClearable={true}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default BucketTodoInput;\r\n","import React from 'react';\r\nimport { TiTick } from \"react-icons/ti\";\r\nimport { BiRotateRight } from \"react-icons/bi\";\r\n\r\nclass Bucket extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bucketName: this.props.bucketName,\r\n            listOfTodo: []\r\n        };\r\n        this.getData = this.getData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n        this.timer = setInterval(this.getData(), 3000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.value !== this.props.value) {\r\n            this.getData();\r\n        }\r\n    }\r\n\r\n    getData() {\r\n        fetch(\"http://localhost:8000/getBucketTodo/\" + this.state.bucketName)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({ listOfTodo: data });\r\n                console.log(data)\r\n            })\r\n            .catch(err => { console.error(err) })\r\n    }\r\n\r\n    render() {\r\n        let val = (this.state.listOfTodo.length > 0 ? this.state.listOfTodo : null);\r\n\r\n        if (val) {\r\n            let items = val.map(item => {\r\n                if (item.status === \"pending\") {\r\n                    return (\r\n                        <li className=\"list-group-item\">{<BiRotateRight title={item.status} />}{' '}{item.value}</li>\r\n                    )\r\n                }\r\n                else if (item.status === \"done\") {\r\n                    return (\r\n                        <li className=\"list-group-item\">{<TiTick title={item.status} />}{' '}{item.value}</li>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <li className=\"list-group-item\">{item.value}</li>\r\n                    )\r\n                }\r\n            });\r\n            return (\r\n\r\n                <div className=\"card\" style={{ width: \"18rem\", display: \"inline-block\" }}>\r\n                    <div className=\"card-header\" style={{ backgroundColor: \"lightgreen\" }}>\r\n                        <emp> {this.state.bucketName}</emp>\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {items}\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            )\r\n\r\n        }\r\n        else {\r\n            return (\r\n                <div >\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default Bucket;","import React from 'react';\r\nimport Bucket from './Bucket';\r\n\r\nfunction ListBucket(props) {\r\n    let listOfBucket = props.listOfBucket;\r\n    let itemsOfBucket = listOfBucket.map((val) => (\r\n        <div key={val.bucketName} className=\"mt-2\" >\r\n\r\n            <Bucket bucketName={val.bucketName} fetchData={props.fetchData} value={props.value} />\r\n\r\n        </div >\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <p align=\"left\" style={{ font: \"message-box\", marginTop: \"30px\" }}><b>LIST OF BUCKETS</b></p>\r\n            <div style={{ display: \"flex\", flexFlow: \"row wrap\" }}>\r\n\r\n                {itemsOfBucket}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport { ListBucket };","import React from \"react\";\nimport BucketInput from './components/BucketInput';\nimport \"./App.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport { ListItem } from './components/ListItem';\nimport { Container, Row, Col, Button, Card } from \"reactstrap\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport BucketTodoInput from \"./components/BucketTodoInput\";\nimport { ListBucket } from \"./components/ListBucket\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listOfTodo: [],\n            listOfBucket: []\n        };\n\n        this.addingTodo = this.addingTodo.bind(this);\n        this.addBucket = this.addBucket.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.getTodoData = this.getTodoData.bind(this);\n    }\n\n    componentDidMount() {\n\n        this.fetchData();\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.value !== this.props.value) {\n            this.getTodoData();\n        }\n    }\n\n\n    getTodoData() {\n        fetch('http://localhost:8000/getTodo')\n            .then(res => res.json())\n            .then(result => {\n                this.setState({ listOfTodo: result })\n                console.log(result)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    fetchData() {\n\n        fetch('http://localhost:8000/getTodo')\n            .then(res => res.json())\n            .then(result => {\n                this.setState({ listOfTodo: result })\n                console.log(result)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        fetch('http://localhost:8000/getBucketList')\n            .then(res => res.json())\n            .then(result => {\n                console.log(result)\n                this.setState({ listOfBucket: result })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    addingTodo(val) {\n        // let temp = [];\n        if (val) {\n            let newTodo = {\n                todo_id: uuidv4(),\n                bucket: \"None\",\n                value: val,\n                status: \"pending\"\n            };\n            //   temp.push(newTodo);\n            fetch('http://localhost:8000/addTodo', {\n                method: 'POST',\n                body: JSON.stringify(newTodo),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n                .then(res => {\n                    this.fetchData();\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n        // if (temp.length > 0) {\n        //     this.setState(prevState => ({\n        //         listOfTodo: [...prevState.listOfTodo, ...temp]\n        //     }));\n        // }\n    }\n\n    addBucket(val) {\n        // let temp = [];\n        // // let obj = Object.assign({});\n        // //   obj.bucket_id = uuidv4();\n        // //   obj.bucket_name = val;\n\n        // // temp.push(val);\n        // // this.setState({\n        // //     listOfBucket: [...this.state.listOfBucket, val]\n        // // })\n\n        if (val) {\n            fetch('http://localhost:8000/addBucket', {\n                method: 'POST',\n                body: JSON.stringify({ bucketName: val }),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n                .then(res => { })\n                .catch(err => {\n                    console.log(err)\n                })\n            this.fetchData();\n        }\n\n    }\n\n    addBucketTodo(val, bucketName) {\n\n        if (val) {\n            let newTodo = {\n                todo_id: uuidv4(),\n                bucket: bucketName,\n                value: val,\n                status: \"pending\"\n            };\n            fetch('http://localhost:8000/addTodo', {\n                method: 'POST',\n                body: JSON.stringify(newTodo),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n                .then(res => { })\n                .catch(err => {\n                    console.log(err)\n                })\n            this.fetchData();\n            console.log(\"fetch from bucket\")\n        }\n    }\n\n    render() {\n\n        return (\n            <div className='App'>\n\n                <Container fluid={true}>\n                    <Row >\n                        <Col xs=\"6\" >\n                            <div align=\"center\" style={{ padding: \"50px 0px 50px 0px\" }}>\n                                <Card body outline color=\"dark\" style={{ backgroundColor: \"inherit\" }}>\n                                    <div >\n                                        <h2 style={{ margin: \"0px 0px 50px 0px\", fontFamily: \"sans-serif\" }}>\n                                            <Button disabled style={{ width: \"500px\" }} color=\"dark\" >\n                                                Add <strong> \"TO_DO\" </strong>items here !!\n                                            </Button>\n                                        </h2>\n                                        <TodoInput addTodo={this.addingTodo} />\n                                    </div>\n                                </Card>\n                                <div  >\n                                    {this.state.listOfTodo.length > 0 ? (\n\n                                        <div style={{ marginTop: \"50px\" }}>\n                                            <ListItem value={this.state.listOfTodo} fetchData={this.fetchData} />\n                                        </div>\n                                    ) : (\n\n                                            <div className=\"text-center\">\n                                                {/* <p id=\"out\"> </p>\n                                                <h2>NO ITEMS TO DISPLAY</h2> */}\n                                            </div>\n                                        )}\n                                </div>\n                            </div>\n                        </Col>\n\n                        <Col xs=\"6\">\n\n                            <div align=\"center\" style={{ padding: \"50px 0px 50px 0px\" }}>\n                                <Card body outline color=\"dark\" style={{ backgroundColor: \"inherit\" }}>\n                                    <div >\n                                        <h2 style={{ margin: \"0px 0px 50px 0px\", fontFamily: \"sans-serif\" }}>\n                                            <Button disabled style={{ width: \"500px\" }} color=\"dark\" >\n                                                Create <strong> Bucket types </strong> here !!\n                                            </Button>\n                                        </h2>\n                                        <BucketInput addBucket={this.addBucket} fetchData={this.fetchData} />\n                                    </div>\n                                </Card>\n                            </div>\n                            <Container fluid={true}>\n                                <Row>\n                                    <div style={{ width: \"100%\", marginTop: \"-30px\" }}>\n                                        <BucketTodoInput list={this.state.listOfBucket} addBucketTodo={this.addBucketTodo} fetchData={this.fetchData} />\n                                    </div>\n                                </Row>\n                                <Row>\n                                    <div style={{ width: \"100%\" }}>\n                                        <ListBucket value={this.state.listOfTodo} listOfBucket={this.state.listOfBucket} fetchData={this.fetchData} />\n                                    </div>\n                                </Row>\n                            </Container>\n\n                        </Col>\n                    </Row>\n                </Container >\n\n            </div >\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n    // <React.StrictMode>\n    //     <App />\n    // </React.StrictMode>\n    <App />,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}